sirve.scomp<-B_Privada[ c("ncomp4", "ncomp11", "ncomp18")]
scomp2<-B_Privada[ c("ncomp5", "ncomp12", "ncomp19")]
asesor<-B_Privada[ c("ncomp6", "ncomp13", "ncomp20")]
propiedad<-B_Privada[ c("ncomp7", "ncomp14", "ncomp21")]
B_Privada <- B_Privada %>%
mutate(
correct_response = rowSums(ncomp, na.rm = T),
obliga =rowSums(obliga, na.rm = TRUE ),
inicio =rowSums(inicio, na.rm = TRUE ),
elegir =rowSums(elegir, na.rm = TRUE ),
sirve.scmp =rowSums(sirve.scomp, na.rm = TRUE ),
scmp.twice =rowSums(scomp2, na.rm = TRUE ),
asesor =rowSums(asesor, na.rm = TRUE ),
propiedad =rowSums(propiedad, na.rm = TRUE ),
)
View(B_Privada[, c("sirvescomp", "scomptwice")])
B_Privada <- B_Privada %>%
select(everything(), -contains("comp"))
rm(ncomp)
# Encuesta B Publica, computo de respuestas correctas
B_Publica <- B_Publica %>%
mutate(
ncomp1 = ifelse(Comp1.PP=="A partir de los 65 años", 1, ifelse(is.na(Comp1.PP), NA, 0)),
ncomp2 = ifelse(Comp2.PP=="Tener ClaveÚnica", 1, ifelse(is.na(Comp2.PP), NA, 0)),
ncomp3 = ifelse(Comp3.PP=="Sí", 1, ifelse(is.na(Comp3.PP), NA, 0)),
ncomp4 = ifelse(Comp4.PP=="A través del Estado con los impuestos", 1, ifelse(is.na(Comp4.PP), NA, 0)),
ncomp5 = ifelse(Comp5.PP=="Por encontrarse dentro del 9% de mayores ingresos", 1, ifelse(is.na(Comp5.PP), NA, 0)),
ncomp6 = ifelse(Comp6.PP=="No", 1, ifelse(is.na(Comp6.PP), NA, 0)),
ncomp7 = ifelse(Comp7.PP=="$1.000.000", 1, ifelse(is.na(Comp7.PP), NA, 0))
)
ncomp<- B_Publica %>% select(contains("ncomp"))
B_Publica <- B_Publica %>%
mutate(
correct_response = rowSums(ncomp, na.rm = T)
)
rm(ncomp)
# Merge encuestas B y C
segundas_encuestas <- bind_rows(B_Privada, B_Publica,
C_Publica, C_Privada) %>%
group_by(uemail) %>%
filter(StartDate==min(StartDate)) %>%
ungroup()
# Merge total encuestas A, B y C
encuestas <- encuestaA_online %>%
left_join(segundas_encuestas, by = c("useridn" = "uemail"))  %>%
mutate(second = ifelse(is.na(encuesta)==TRUE, "sin segunda encuesta", encuesta))
encuestas <- encuestas[,colSums(is.na(encuestas))<nrow(encuestas)]
saveRDS(encuestas, paste0(path_datos, "encuestas_clean2.rds"))
prop.table(table(encuestas$obliga))
prop.table(table(encuestas$inicio))
prop.table(table(encuestas$elegir))
prop.table(table(encuestas$sirve.scmp))
prop.table(table(encuestas$scmp.twice))
prop.table(table(encuestas$asesor))
prop.table(table(encuestas$propiedad))
prop.table(table(encuestas$Comp1.PP))
prop.table(table(encuestas$Comp2.PP))
prop.table(table(encuestas$Comp3.PP))
prop.table(table(encuestas$Comp4.PP))
prop.table(table(encuestas$Comp5.PP))
prop.table(table(encuestas$Comp6.PP))
prop.table(table(encuestas$Comp7.PP))
prop.table(table(encuestas$ncomp1))
prop.table(table(encuestas$ncomp2))
prop.table(table(encuestas$ncomp3))
prop.table(table(encuestas$ncomp4))
prop.table(table(encuestas$ncomp5))
prop.table(table(encuestas$ncomp6))
prop.table(table(encuestas$ncomp7))
library(stargazer)
library(MASS)
library(broom)
library(ggpubr)
library(naniar)
install.packages("naniar")
library(stargazer)
library(MASS)
library(broom)
library(ggpubr)
library(naniar)
library(nnet)
rm(list=ls())
#path_datos <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/"
#path_datos <- "C:/Users/Usach/Dropbox/Sitios web/Datos Estudio Online/"
#path_datos <- "C:/Users/Denise/Dropbox/Sitios web/Datos Estudio Online/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Estudio Online/"
#Overconfidence
df$Confidence<-as.numeric(df$Confidence_1)
#path_datos <- "C:/Users/Usach/Dropbox/Sitios web/Datos Estudio Online/"
path_datos <- "C:/Users/Denise/Dropbox/Sitios web/Datos Estudio Online/"
#path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Estudio Online/"
# If you don´t use Rprojects functionality setwd
#path_github <- "C:/Users/Usach/OneDrive - usach.cl/Documents/GitHub/Pensions-Website-Design/"
path_github <- "C:/Users/Denise/Documents/GitHub/Pensions-Website-Design/"
#path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
df <- readRDS(paste0(path_datos, "online_data.rds"))
##############################
########### Data Management
##############################
#Overconfidence
df$Confidence<-as.numeric(df$Confidence_1)
df$overconfidence<- (df$Confidence/10) / (df$correct_response/7)
#View(df[, c("correct_response", "Confidence", "overconfidence")])
#Change opinion about advisor
df$Change_Advisor<-ifelse(df$PAdvice=="No" & df$Advisor=="No", "Maintain No",
ifelse (df$PAdvice=="No" & df$Advisor=="Sí", "> advisor",
ifelse(df$PAdvice=="Sí" & df$Advisor=="Sí", "Maintain Yes",
ifelse(df$PAdvice=="Sí" & df$Advisor=="No", "< advisor",
ifelse(df$PAdvice=="No lo ha pensado" & df$Advisor=="Sí", "> advisor",
ifelse(df$PAdvice=="No lo ha pensado" & df$Advisor=="No", "< advisor", "Error"
))))))
df$pb_d<-ifelse(df$present_bias>19999, "alto", "bajo")
### Alternative Financial Literacy
### Correct answers for Finantial Literacy Questions
#table(DF$QMath1)
df$QMath1b_correct<-ifelse(df$QMath1=="Más de $125.000.000",  1,
ifelse(is.na(df$QMath1), NA, 0))
#table(DF$QMath1, DF$QMath1_correct)
#table(DF$QMath2)
df$QMath2b_correct<-ifelse(df$QMath2=="Nunca se terminaría de pagar el crédito", 1,
ifelse(is.na(df$QMath1), NA, 0))
#table(DF$QMath2, DF$QMath2_correct)
tmp<-df[, c("QMath1b_correct", "QMath2b_correct") ]
tmp$financial_lit_b<-rowSums(tmp)
df$financial_lit_b<-tmp$financial_lit_b
rm(tmp)
# Income level proxy though health care provider
table(df$HSist)
df$private_health<-ifelse( df$HSist == "ISAPRE" | df$HSist == "FF.AA. y el Orden", "Private healthcare", "Public Health or other")
df$private_health <-factor(df$private_health, levels = c("Public Health or other", "Private healthcare"))
table(df$HSist, df$private_health)
df$Profile<-ifelse(df$Treatments %in% c("Perfil", "VideoPerfil"), "Profile", "Product")
#table(df$Treatments, df$Profile)
#df$Profile <- ordered(df$Profile, levels = c("Profile", "Product"))
#levels(df$Profile)
df$Profile<-as.factor(df$Profile)
df<- within(df, Profile <- relevel(Profile, ref = "Product"))
df$Video<-ifelse(df$Treatments %in% c("Video", "VideoPerfil"), "Video", "Text")
table(df$Treatments, df$Video)
df$Profile_Video<-ifelse(df$Treatments=="VideoPerfil", "Profile_Video", "Other")
#table(df$Treatments, df$Profile_Video)
############################
###### Subsets of data
##################################
df.f<-df[!is.na(df$correct_response),]
df.pv<-df[df$Pension_Type=="Private",]
df.pp<-df[df$Pension_Type=="Public",]
df.ns<-df[df$PlanJubi=="No sabe",]
##### Opt Out
opt_out1<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video  + as.factor(financial_lit_b), data = df, family = "binomial")
### Correct Response
lm_CR <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b) ,
data = df)
lm_CR_pv <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Public",])
lm_CR_pp <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Private",])
lm_CR_F <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Gender=="F",])
lm_CR_M <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Gender=="M",])
lm_CR_ns <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$PlanJubi=="No sabe",])
stargazer(opt_out1, lm_CR, lm_CR_pv, lm_CR_pp, lm_CR_F, lm_CR_M, lm_CR_ns)
table(df$OptOut)
398+93
summary(df$OptOut)
##### Opt Out
opt_out1<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
### Correct Response
lm_CR <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b) ,
data = df)
lm_CR_pv <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Public",])
lm_CR_pp <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Private",])
lm_CR_F <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Gender=="F",])
lm_CR_M <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Gender=="M",])
lm_CR_ns <- lm(correct_response ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$PlanJubi=="No sabe",])
stargazer(opt_out1, lm_CR, lm_CR_pv, lm_CR_pp, lm_CR_F, lm_CR_M, lm_CR_ns)
opt_out2<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video + Gender + Educ + Birth, data = df, family = "binomial")
summary(opt_out2)
opt_out2<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video + Gender + Educ + (2022-as.numeric(Birth)), data = df, family = "binomial")
opt_out2<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video + Gender + Educ, data = df, family = "binomial")
summary(opt_out2)
opt_out2<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video + Gender + Educ
+ Age, data = df, family = "binomial")
summary(opt_out2)
table(df$OptOut)
names(df)
table(df$sitioderivado)
table(df$contesta)
table(df$contesta, df$terminaron)
table(df$terminaron)
df$didntanswer<-ifelse(df$contesta=="B" | df$contesta=="B/C", 0, 1)
table(df$didntanswer, df$contesta)
table(df$didntanswer, df$terminaron)
table(df$didntanswer)
df$C<-ifelse(df$contesta=="B" | df$contesta=="B/C", 0, 1)
finished<-glm(as.factor(terminaron) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
C<-glm(as.factor(C) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
opt_out<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
finished2<-glm(as.factor(terminaron) ~  Profile + Video + Profile_Video + Gender + Educ + Age, data = df, family = "binomial")
C2<-glm(as.factor(C) ~  Profile + Video + Profile_Video + Gender + Educ + Age, data = df, family = "binomial")
opt_out2<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video + Gender + Educ + Age, data = df, family = "binomial")
summary(finished,C, opt_out,finished2,C2, opt_out2)
stargazer(finished,C, opt_out,finished2,C2, opt_out2)
finished<-glm(as.factor(terminaron) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
C<-glm(as.factor(C) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
opt_out<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video, data = df, family = "binomial")
finished2<-glm(as.factor(terminaron) ~  Profile + Video + Profile_Video + Age + Gender + Educ + private_health , data = df, family = "binomial")
C2<-glm(as.factor(C) ~  Profile + Video + Profile_Video + Age + Gender + Educ + private_health , data = df, family = "binomial")
opt_out2<- glm(as.factor(OptOut) ~  Profile + Video + Profile_Video + Age + Gender + Educ + private_health , data = df, family = "binomial")
stargazer(finished,C, opt_out,finished2,C2, opt_out2)
stargazer(finished,C, finished2,C2,
out=paste0(path_github,"online/Outputs/optout_online.tex"), type="latex",
covariate.labels = c("Profile", "Video", "Video and Profile", "Age", "Male", "Education: High School", "University or technical college",
"Postgraduate degree", "Private healthcare", "Constant"),
dep.var.labels = c("Left the website", "Left the website","Avoided comprehension questions", "Avoided comprehension questions"), # keep.stat=c("n", "ll"),
dep.var.caption = "", star.cutoffs = c(0.05, 0.01, 0.001), notes.align = "l", table.placement = "H",
label="tbl:finished_tutorial",
title = "Logit models on the likelihood of completing the tutorial, using different definitions of 'finished',
with and without control variables" , no.space=TRUE)
stargazer(finished,finished2,C, C2,
out=paste0(path_github,"online/Outputs/optout_online.tex"), type="latex",
covariate.labels = c("Profile", "Video", "Video and Profile", "Age", "Male", "High School", "University or technical college",
"Postgraduate degree", "Private healthcare", "Constant"),
dep.var.labels = c("Left the website", "Left the website","Avoided comp. questions", "Avoided comp. questions"), # keep.stat=c("n", "ll"),
dep.var.caption = "", star.cutoffs = c(0.05, 0.01, 0.001), notes.align = "l", table.placement = "H",
label="tbl:finished_tutorial",
title = "Logit models on the likelihood of completing the tutorial, using different definitions of 'finished',
with and without control variables" , no.space=TRUE)
table(df$correct_response, df$C)
View(df[, c("terminaron", "contesta", "correct_response")])
encuesta_A <- "Encuesta_A.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(is.na(useridn)==FALSE) %>%
group_by(useridn) %>%
filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-IPAddress,
-RecordedDate,
-ResponseId,
-RecipientLastName,
-RecipientFirstName,
-RecipientEmail,
-ExternalReference,
-LocationLatitude,
-LocationLongitude,
-UserLanguage) %>% distinct()
# change your path
#path_datos <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Estudio Online/"
# If you don´t use Rprojects functionality setwd
#setwd("C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/")
#path_github <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/Pilots/Superintendencia_de_Pensiones"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
encuesta_A <- "Encuesta_A_anonimo.csv"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Estudio Online/"
# If you don´t use Rprojects functionality setwd
#setwd("C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/")
#path_github <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/Pilots/Superintendencia_de_Pensiones"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
## Load packages
source(paste0(path_github,"online/R/paquetes.R"))
## Load own functions
source(paste0(path_github,"online/R/funciones.R"))
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(is.na(useridn)==FALSE) %>%
group_by(useridn) %>%
filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-IPAddress,
-RecordedDate,
-ResponseId,
-RecipientLastName,
-RecipientFirstName,
-RecipientEmail,
-ExternalReference,
-LocationLatitude,
-LocationLongitude,
-UserLanguage) %>% distinct()
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,]
View(encuestaA_online)
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(is.na(useridn)==FALSE) %>%
group_by(useridn) %>%
filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-IPAddress,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(is.na(useridn)==FALSE) %>%
group_by(useridn) %>%
filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
View(encuestaA_online)
names(encuesta_A)
names(encuestaA_online)
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(is.na(useridn)==FALSE) %>%
filter(is.na(EPension_PuvsPri)==FALSE) %>%
group_by(useridn) %>%
filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
# filter(is.na(useridn)==FALSE) %>%
filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
# filter(is.na(useridn)==FALSE) %>%
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
View(encuestaA_online)
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(Tram_jubilacion=="Sí") %>%
# filter(is.na(useridn)==FALSE) %>%
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(Tram_jubilacion!="Sí") %>%
# filter(is.na(useridn)==FALSE) %>%
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
906-292
View(encuestaA_online)
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
#  filter(Tram_jubilacion!="Sí") %>%
# filter(is.na(useridn)==FALSE) %>%
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
table(encuestaA_online$Tram_jubilacion)
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(Tram_jubilacion=="No") %>%
# filter(is.na(useridn)==FALSE) %>%
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
View(encuestaA_online)
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(Tram_jubilacion=="No") %>% # excluded because they are already retired
filter(is.na(EpistemicC_1)==FALSE) %>% # excluded because of age
#  filter(is.na(useridn)==FALSE) %>%
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]
611-573
View(encuestaA_online)
encuesta_A <- "Encuesta_A_anonimo.csv"
encuestaA_online <- read_csv(paste0(path_datos, encuesta_A))[-1,] %>%
mutate(#fecha = lubridate::as_date(EndDate, format = "%Y-%m-%d"),
sitioderivado = case_when(
nchar(useridn) == 4  ~ stringi::stri_sub(UID, 8, 8),
nchar(useridn) == 3  ~ stringi::stri_sub(UID, 7, 7)),
useridn = as.numeric(useridn)) %>%
filter(Tram_jubilacion=="No") %>% # excluded because they are already retired
filter(is.na(EpistemicC_1)==FALSE) %>% # excluded because of age
filter(is.na(UID)==FALSE) %>% ## Error in treatment assignment
#  filter(is.na(EPension_PuvsPri)==FALSE) %>%
#  group_by(useridn) %>% 5
# filter(Progress==max(Progress)) %>%
ungroup() %>%
select(-Status,
-RecordedDate,
-ResponseId,
-ExternalReference,
-UserLanguage) %>% distinct()
encuestaA_online <- encuestaA_online[,colSums(is.na(encuestaA_online))<nrow(encuestaA_online)]

df %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
theme_gppr <- function(){
font <- "Georgia"   #assign font family up front
ggthemes::theme_economist_white() %+replace%    #replace elements we want to change
theme(
legend.position = "bottom",
#grid elements
panel.grid.major = element_blank(),    #strip major gridlines
panel.grid.minor = element_blank(),    #strip minor gridlines
#since theme_minimal() already strips axis lines,
#we don't need to do that again
#text elements
plot.title = element_text(             #title
family = font,            #set font family
size = 20,                #set font size
face = 'bold',            #bold typeface
hjust = 0,                #left align
vjust = 2),               #raise slightly
plot.subtitle = element_text(          #subtitle
family = font,            #font family
size = 14),               #font size
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
hjust = 1),               #right align
# axis.title = element_text(             #axis titles
#              family = font,            #font family
#              size = 10),               #font size
#
# axis.text = element_text(              #axis text
#              family = font,            #axis famuly
#              size = 10),                #font size
#axis.text.x = element_text(            #margin for axis text
# margin=margin(5, b = 10)),
#axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12, angle = 90, vjust = +3)
#since the legend often requires manual tweaking
#based on plot content, don't define it here
)
}
my_comparisons <- list( c("Baseline", "Perfil"), c("Perfil", "Video"), c("Video", "VideoPerfil"), c("Video", "Baseline"), c("Perfil", "VideoPerfil"), c("Baseline", "VideoPerfil") )
h_res <- round(mean(df$correct_response, na.rm = TRUE), digits = 1)
df %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h_res <- round(mean(df$correct_response, na.rm = TRUE), digits = 1)
df %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h_res <- round(mean(df$correct_response, na.rm = TRUE), digits = 1)
df %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
ggsave(paste0(path_github,"online/Graphs/responses.pdf"))
View(is.na(df))
df.g<-df[!is.na(df$correct_response),]
df.g %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
ggsave(paste0(path_github,"online/Graphs/responses.pdf"))
df.g %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,10)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
df.g %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,7)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
df.g %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(df.g$correct_response, na.rm = TRUE), digits = 1)
df.g %>%
ggplot(aes(y = correct_response, x = Treatments, color = factor(Gender))) +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
ylab("Num. Correct Responses") +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
theme_gppr() +
ggsci::scale_color_jco() +
stat_compare_means(aes(group = Gender), label = "p.signif")+
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +3),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank(),
axis.title.x = element_blank()) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12))
ggsave(paste0(path_github,"online/Graphs/responses_het_gender.pdf"))
h_res <- round(mean(df.g$correct_response, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(correct_response, Treatments, Pension_Type)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments), color = Pension_Type)) +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Num. Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
stat_compare_means(aes(group = Pension_Type), label = "p.signif")
ggsave(paste0(path_github,"online/Graphs/responses_het_pensiontype.pdf"))
h <- round(mean(df.g$InfoUtil_1, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = InfoUtil_1, x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
table(df.g$InfoUtil_1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(df.g$InfoUtil_1, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(df.g$InfoUtil_1, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(df.g$InfoUtil_1, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = 1:7, limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h
h
h <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = 1:7, limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = 0:7, limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments))) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
h_res <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments, Pension_Type)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments), color = Pension_Type)) +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Num. Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
stat_compare_means(aes(group = Pension_Type), label = "p.signif")
##### Usefulness Private/Public
h_res <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments, Pension_Type)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments), color = Pension_Type)) +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="Treatments", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
stat_compare_means(aes(group = Pension_Type), label = "p.signif")
h_cu <- round(mean(df.g$as.numeric(Confidence), na.rm = TRUE), digits = 1)
warnings(9)
co <- df.g %>%
ggplot(aes(y = Confidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_jitter() +
geom_hline(aes(yintercept = h_co), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
co
h_co <- round(mean(df.g$as.numeric(Confidence), na.rm = TRUE), digits = 1)
h_co <- round(mean(as.numeric(df.g$Confidence), na.rm = TRUE), digits = 1)
h_co <- round(mean(as.numeric(df.g$Confidence), na.rm = TRUE), digits = 1)
co <- df.g %>%
ggplot(aes(y = as.numeric(df.g$Confidence), x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_jitter() +
geom_hline(aes(yintercept = h_co), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
h_co <- round(mean(df.g$overconfidence, na.rm = TRUE), digits = 1)
co <- df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_jitter() +
geom_hline(aes(yintercept = h_co), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
#scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Over confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
co
h_oco <- round(mean(df.g$overconfidence, na.rm = TRUE), digits = 1)
oco <- df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_jitter() +
geom_hline(aes(yintercept = h_oco), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(limits = c(-1,2)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Over confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
oco
df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_jitter() +
geom_hline(aes(yintercept = h_oco), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(limits = c(-1,2)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Over confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
ggsave(paste0(path_github,"online/Graphs/overconfidence.pdf"))
df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_jitter() +
geom_hline(aes(yintercept = 0), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(limits = c(-1,2)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Over confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
ggsave(paste0(path_github,"online/Graphs/overconfidence.pdf"))

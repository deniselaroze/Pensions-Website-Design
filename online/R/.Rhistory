hjust = 0,                #left align
vjust = 2),               #raise slightly
plot.subtitle = element_text(          #subtitle
family = font,            #font family
size = 14),               #font size
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
hjust = 1),               #right align
# axis.title = element_text(             #axis titles
#              family = font,            #font family
#              size = 10),               #font size
#
# axis.text = element_text(              #axis text
#              family = font,            #axis famuly
#              size = 10),                #font size
#axis.text.x = element_text(            #margin for axis text
# margin=margin(5, b = 10)),
#axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12, angle = 90, vjust = +3)
#since the legend often requires manual tweaking
#based on plot content, don't define it here
)
}
my_comparisons <- list( c("Baseline", "Perfil"), c("Perfil", "Video"), c("Video", "VideoPerfil"), c("Video", "Baseline"), c("Perfil", "VideoPerfil"), c("Baseline", "VideoPerfil") )
df.g<-df[!is.na(df$correct_response),]
df.g$Gender<-ifelse(df.g$Gender=="F", "Female", "Male")
#### Opt Out
p <- df %>%
group_by(Treatments) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-5,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Treatments)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
ggsave(paste0(path_github,"online/Graphs/OptOut.pdf"))
### Usefulness of the information
h <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments), color=Treatments)) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,16)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12),
legend.position="none") +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
ggsave(paste0(path_github,"online/Graphs/usefulness.pdf"))
##### Usefulness Private/Public
h_res <- round(mean(as.numeric(df.g$InfoUtil_1), na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(InfoUtil_1, Treatments, Pension_Type)  %>%
ggplot(aes(y = as.numeric(InfoUtil_1), x = as.factor(Treatments), color = Pension_Type)) +
geom_boxplot() +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2", name = "Type of Pension")+
labs(x ="", y = "Level of usefulness", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
stat_compare_means(aes(group = Pension_Type), label = "p.signif")
ggsave(paste0(path_github,"online/Graphs/usefulness_het_pensiontype.pdf"))
### Correct Responses
h <- round(mean(df.g$correct_response, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(correct_response, Treatments)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments), color=Treatments)) +
geom_boxplot() +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 7, 1), limits = c(0,12)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
labs(x ="", y = "Num. Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12),
legend.position="none") +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")
ggsave(paste0(path_github,"online/Graphs/responses.pdf"))
### Correct responses Gender Het
h <- round(mean(df.g$correct_response, na.rm = TRUE), digits = 1)
df.g %>%
ggplot(aes(y = correct_response, x = Treatments, color = Gender)) +
geom_boxplot() +
ylab("Num. Correct Responses") +
geom_hline(aes(yintercept = h), linetype = 2, color = "gray") +
geom_text(aes(y=h+0.5, label=paste0("Mean ", prettyNum(h,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
theme_gppr() +
ggsci::scale_color_jco() +
stat_compare_means(aes(group = Gender), label = "p.signif")+
theme(axis.title.y = element_text(vjust = +3),
plot.title = element_text(vjust = -1, size = 12),
#axis.ticks.x = element_blank(),
#axis.title.x = element_blank()
) +
scale_y_continuous(breaks = seq(0, 7, 1), limits = c(0,8))
ggsave(paste0(path_github,"online/Graphs/responses_het_gender.pdf"))
### Correct Responses Heterogeneity Public/Private
h_res <- round(mean(df.g$correct_response, na.rm = TRUE), digits = 1)
df.g %>%
dplyr::select(correct_response, Treatments, Pension_Type)  %>%
ggplot(aes(y = correct_response, x = as.factor(Treatments), color = Pension_Type)) +
geom_boxplot() +
geom_hline(aes(yintercept = h_res), linetype = 2, color = "gray") +
geom_text(aes(y=h_res+0.5, label=paste0("Mean ", prettyNum(h_res,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 7, 1), limits = c(0,8)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2", name = "Type of Pension")+
labs(x ="", y = "Num. Correct Response", title = "")  +
theme(axis.title.y = element_text(vjust = +3),
axis.ticks.x = element_blank(),
plot.title = element_text(vjust = -1, size = 12)) +
stat_compare_means(aes(group = Pension_Type), label = "p.signif")
ggsave(paste0(path_github,"online/Graphs/responses_het_pensiontype.pdf"))
#### Self reported measures
##########################################################
###### Confidence
h_co <- round(mean(as.numeric(df.g$Confidence), na.rm = TRUE), digits = 1)
df.g %>%
ggplot(aes(y = as.numeric(df.g$Confidence), x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_hline(aes(yintercept = h_co), linetype = 2, color = "gray") +
geom_text(aes(y=h_co+0.5, label=paste0("Mean ", prettyNum(h_co,big.mark=",")), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,12)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "", title = "Confidence")  +
theme(axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +6),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
###### overconfidence
df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_hline(aes(yintercept = 0), linetype = 2, color = "gray") +
#scale_y_continuous(limits = c(0,0.2)) +
theme_gppr() +
ggsci::scale_color_aaas() +
ggsci::scale_fill_aaas() +
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "Overconfidence", title = "")  +
theme(legend.position="none",
#axis.title.y = element_text(vjust = +6),
#plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
ggsave(paste0(path_github,"online/Graphs/overconfidence.pdf"))
#over confidence gender
df.g %>%
ggplot(aes(y = overconfidence, x = Treatments, color = Gender)) +
geom_boxplot() +
#geom_point(position = position_jitterdodge()) +
ylab("Overconfidence") + xlab("") +
geom_hline(aes(yintercept = 0), linetype = 2, color = "gray") +
theme_gppr() +
ggsci::scale_color_jco() +
stat_compare_means(aes(group = Gender), label = "p.signif")+
theme(#axis.text.x=element_blank(),
axis.title.y = element_text(vjust = +3),
plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank(),
axis.title.x = element_blank()) #+
#scale_y_continuous(limits = c(0,0.15))
ggsave(paste0(path_github,"online/Graphs/overconfidence_het_gender.pdf"))
#Promoter
df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_hline(aes(yintercept = 0), linetype = 2, color = "gray") +
#scale_y_continuous(limits = c(0,0.2)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "Overconfidence", title = "")  +
theme(legend.position="none",
#axis.title.y = element_text(vjust = +6),
#plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
ggsave(paste0(path_github,"online/Graphs/overconfidence.pdf"))
df.g %>%
ggplot(aes(y = overconfidence, x = as.factor(Treatments), color = Treatments)) +
geom_boxplot() +
geom_hline(aes(yintercept = 0), linetype = 2, color = "gray") +
#scale_y_continuous(limits = c(0,0.2)) +
theme_gppr() +
scale_colour_brewer(type = "seq", palette = "Dark2")+
ggpubr::stat_compare_means(comparisons = my_comparisons,
label = "p.signif", method = "wilcox.test")+
labs(x ="", y = "Overconfidence", title = "")  +
theme(legend.position="none",
#axis.title.y = element_text(vjust = +6),
#plot.title = element_text(vjust = -1, size = 12),
axis.ticks.x = element_blank())
ggsave(paste0(path_github,"online/Graphs/overconfidence.pdf"))
p <- df %>%
group_by(Treatments) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-5,]
View(prop_test)
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-5,]
View(p)
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-8,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Pension_Type)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Pension_Type)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out") + facet_wrap(Pension_type)
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Pension_Type)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out") + facet_wrap(prop_test$Pension_type)
View(prop_test)
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Pension_Type)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out") + facet_wrap(prop_test$Pension_type)
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Pension_Type)) +
geom_bar(stat="identity", position= dodge) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out") + facet_wrap(prop_test$Pension_type)
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Pension_Type)) +
geom_bar(stat="identity", position= dodge) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
p <- df %>%
group_by(Treatments) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-5,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, fill = Treatments)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank()) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
ggsave(paste0(path_github,"online/Graphs/OptOut.pdf"))
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type)) +
geom_bar(stat="identity", position= dodge) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type)) +
geom_bar(stat="identity", position= dodge) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high , position_dodge2(preserve = "single"))) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type)) +
geom_bar(stat="identity", position= position_dodge2(preserve = "single")) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high , position_dodge2(preserve = "single"))) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
View(prop_test)
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type)) +
geom_bar(stat="identity", position= position_dodge2()) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high , position_dodge2())) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type)) +
geom_bar(stat="identity", position= position_dodge2()) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high ,  position=position_dodge2())) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type)) +
geom_bar(stat="identity", position= "dodge2") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high ,  position="dodge2")) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type, fill =Pension_Type)) +
geom_bar(stat="identity", position= "dodge2") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high ,  position="dodge2")) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type, fill =Pension_Type)) +
geom_bar(stat="identity", position= "dodge2") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high ,  position="dodge2"),  color = Pension_Type) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type, fill =Pension_Type)) +
geom_bar(stat="identity", position= "dodge2") +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high ,  position="dodge2",  color = Pension_Type)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
prop_test %>%
ggplot(aes(x=Treatments, y=estimate, color = Pension_Type, fill =Pension_Type)) +
geom_bar(stat="identity", position= "dodge2",  color = Pension_Type) +
geom_errorbar(aes(ymin=conf.low, ymax = conf.high ,  position="dodge2",  color = Pension_Type)) +
theme_gppr() +
ggsci::scale_fill_aaas() +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1)) +
theme(axis.title.x=element_blank(),) +
geom_hline(aes(yintercept = 0.2), linetype = 2, color = "gray") +
geom_text(aes(y=0.2, label=paste0("0.2"), x=0.1), colour='gray', hjust=-0.1 , vjust = 1) +
ylab("Opt Out")
p <- df %>%
group_by(Treatments, Pension_Type) %>%
summarise(out = sum(OptOut =="Out", na.rm=T),
n = n()) %>%
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(out, n, conf.level = 0.95)))) %>%
tidyr::unnest(tst)
prop_test<-p[-9,]
View(prop_test)

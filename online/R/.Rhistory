df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# Private participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$private == 1 )/sum(CATE_df$private == 1)
# Public participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$private == 0 )/sum(CATE_df$private == 0)
# CATE Heterogeneity plot
hist <- CATE_df
hist$p<-NA
hist$p<-ifelse(hist$Private==1, "Private Pensions", "Public Benefits")
hist$p<-ifelse(hist$private==1, "Private Pensions", "Public Benefits")
hist$p<- factor(hist$g, levels=c('Public Benefits', 'Private Pensions'))
View(hist)
hist <- CATE_df
hist$p<-NA
hist$p<-ifelse(hist$private==1, "Private Pensions", "Public Benefits")
hist$p<- factor(hist$g, levels=c('Public Benefits', 'Private Pensions'))
View(hist)
hist <- CATE_df
hist$p<-NA
hist$p<-ifelse(hist$private==1, "Private Pensions", "Public Benefits")
hist$p<- factor(hist$p, levels=c('Public Benefits', 'Private Pensions'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(p))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "", )
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
Priv_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
Priv_het
####################################
### Financial literacy Heterogeneity
####################################
library(BayesTree)
set.seed(89536)
# Data set up including calculating ability rank
df.b <- df.f
#set up  - divide into 1 treatment group and 0 control
df.b$treat <- df.b$Video
df.b$treat.het<-ifelse(df.b$treat=="Video", 1, 0)
df.b$gender <- ifelse(df.b$Gender == "M",1,0)
df.b$private <- ifelse(df.b$Pension_Type == "Private",1,0)
# Define model variables incl. outcome as column 1
vars <- c("correct_response", "treat.het", "financial_lit_b", "private")
df.b <- df.b[,vars]
df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# FL 0 participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$financial_lit_b == 0 )/sum(CATE_df$financial_lit_b == 0)
# FL 1 participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$financial_lit_b == 1 )/sum(CATE_df$financial_lit_b == 1)
# FL2 participant: prop. below
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$financial_lit_b == 2 )/sum(CATE_df$financial_lit_b == 2)
# CATE Heterogeneity plot
hist <- CATE_df
hist$FL<-NA
hist$FL<-ifelse(hist$financial_lit_b==0, "Low Fin. Lit.", ifelse(hist$financial_lit_b==1, "Mid Fin. Lit.", "High Fin. Lit.") )
hist$FL<- factor(hist$FL, levels=c('Low Fin. Lit.', 'Mid Fin. Lit.', 'High Fin. Lit.'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(FL))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "")
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
FL_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
FL_het
ggsave(FL_het, filename = "online/Outputs/Figure_A4a.pdf", path=path_github, device = "pdf", height = 8, width = 6, dpi = 300)
####################################
### Gender Heterogeneity
####################################
library(BayesTree)
set.seed(89536)
# Data set up including calculating ability rank
df.b <- df.f
#set up  - divide into 1 treatment group and 0 control
df.b$treat <- df.b$Video
df.b$treat.het<-ifelse(df.b$treat=="Video", 1, 0)
df.b$gender <- ifelse(df.b$Gender == "M",1,0)
df.b$private <- ifelse(df.b$Pension_Type == "Private",1,0)
# Define model variables incl. outcome as column 1
vars <- c("correct_response", "treat.het",  "gender", "private")
df.b <- df.b[,vars]
df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# Male participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$gender == 1 )/sum(CATE_df$gender == 1)
# Female participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$gender == 0 )/sum(CATE_df$gender == 0)
# CATE Heterogeneity plot
hist <- CATE_df
hist$g<-NA
hist$g<-ifelse(hist$gender==0, "Women", "Men")
hist$g<- factor(hist$g, levels=c('Women', 'Men'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(g))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "", )
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
Gen_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
Gen_het
ggsave(Gen_het, filename = "online/Outputs/Figure_A3a.pdf", path=path_github, device = "pdf", height = 8, width = 6, dpi = 300)
####################################
### Pension type Heterogeneity
####################################
library(BayesTree)
set.seed(53698)
# Data set up including calculating ability rank
df.b <- df.f
table(df.f$private_health)
#set up  - divide into 1 treatment group and 0 control
df.b$treat <- df.b$Video
df.b$treat.het<-ifelse(df.b$treat=="Video", 1, 0)
df.b$gender <- ifelse(df.b$Gender == "M",1,0)
df.b$private <- ifelse(df.b$Pension_Type == "Private",1,0)
df.b$Educ<- ifelse(df.b$educ_eng == "Primary or high-school degree",0, ifelse(df.b$educ_eng == "University degree", 1,2))
# Define model variables incl. outcome as column 1
vars <- c("correct_response", "treat.het","private", "gender", "financial_lit_b")
df.b <- df.b[,vars]
df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# Private participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$private == 1 )/sum(CATE_df$private == 1)
# Public participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$private == 0 )/sum(CATE_df$private == 0)
# CATE Heterogeneity plot
hist <- CATE_df
hist$p<-NA
hist$p<-ifelse(hist$private==1, "Private Pensions", "Public Benefits")
hist$p<- factor(hist$p, levels=c('Public Benefits', 'Private Pensions'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(p))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "", )
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
Priv_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
Priv_het
ggsave(Priv_het, filename = "online/Outputs/Figure_A2a.pdf", path=path_github, device = "pdf", height = 8, width = 6, dpi = 300)
###########################################3
#### Other dependent variables of interest
rm(list=ls())
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Laboratorio/Encuestas y sitios/"
# If you don´t use Rprojects functionality setwd
#path_github <- "C:/Users/Usach/OneDrive - usach.cl/Documents/GitHub/Pensions-Website-Design/"
#path_github <- "C:/Users/Denise/Documents/GitHub/Pensions-Website-Design/"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
df <- readRDS(paste0(path_datos, "lab_data.rds"))
df.f<-df[!is.na(df$correct_response),]
df.en <- readRDS(paste0(path_datos, "encuestas_clean.rds"))
####################################
### Financial literacy Heterogeneity
####################################
library(BayesTree)
set.seed(89536)
# Data set up including calculating ability rank
df.b <- df.f
#set up  - divide into 1 treatment group and 0 control
df.b$treat <- df.b$Video
df.b$treat.het<-ifelse(df.b$treat=="Video", 1, 0)
df.b$gender <- ifelse(df.b$Gender == "M",1,0)
df.b$private <- ifelse(df.b$Pension_Type == "Private",1,0)
# Define model variables incl. outcome as column 1
vars <- c("correct_response", "treat.het", "financial_lit_b", "private")
df.b <- df.b[,vars]
df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# FL 0 participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$financial_lit_b == 0 )/sum(CATE_df$financial_lit_b == 0)
# FL 1 participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$financial_lit_b == 1 )/sum(CATE_df$financial_lit_b == 1)
# FL2 participant: prop. below
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$financial_lit_b == 2 )/sum(CATE_df$financial_lit_b == 2)
# CATE Heterogeneity plot
hist <- CATE_df
hist$FL<-NA
hist$FL<-ifelse(hist$financial_lit_b==0, "Low Fin. Lit.", ifelse(hist$financial_lit_b==1, "Mid Fin. Lit.", "High Fin. Lit.") )
hist$FL<- factor(hist$FL, levels=c('Low Fin. Lit.', 'Mid Fin. Lit.', 'High Fin. Lit.'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(FL))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "")
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
FL_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
FL_het
ggsave(FL_het, filename = "Lab/Outputs/Figure_A4b.pdf", path=path_github, device = "pdf", height = 8, width = 6, dpi = 300)
####################################
### Gender Heterogeneity
####################################
library(BayesTree)
set.seed(89536)
# Data set up including calculating ability rank
df.b <- df.f
#set up  - divide into 1 treatment group and 0 control
df.b$treat <- df.b$Video
df.b$treat.het<-ifelse(df.b$treat=="Video", 1, 0)
df.b$gender <- ifelse(df.b$Gender == "M",1,0)
df.b$private <- ifelse(df.b$Pension_Type == "Private",1,0)
# Define model variables incl. outcome as column 1
vars <- c("correct_response", "treat.het",  "gender", "private")
df.b <- df.b[,vars]
df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# Male participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$gender == 1 )/sum(CATE_df$gender == 1)
# Female participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$gender == 0 )/sum(CATE_df$gender == 0)
# CATE Heterogeneity plot
# CATE Heterogeneity plot
hist <- CATE_df
hist$g<-NA
hist$g<-ifelse(hist$gender==0, "Women", "Men")
hist$g<- factor(hist$g, levels=c('Women', 'Men'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(g))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "", )
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
Gen_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
Gen_het
ggsave(Gen_het, filename = "Lab/Outputs/Figure_A3b.pdf", path=path_github, device = "pdf", height = 8, width = 6, dpi = 300)
####################################
### Pension type Heterogeneity
####################################
library(BayesTree)
set.seed(53698)
# Data set up including calculating ability rank
df.b <- df.f
table(df.f$private_health)
#set up  - divide into 1 treatment group and 0 control
df.b$treat <- df.b$Video
df.b$treat.het<-ifelse(df.b$treat=="Video", 1, 0)
df.b$gender <- ifelse(df.b$Gender == "M",1,0)
df.b$private <- ifelse(df.b$Pension_Type == "Private",1,0)
df.b$Educ<- ifelse(df.b$educ_eng == "Primary or high-school degree",0, 1 ) # With or without a graduate degree
# Define model variables incl. outcome as column 1
vars <- c("correct_response", "treat.het","private", "gender", "financial_lit_b")
df.b <- df.b[,vars]
df.b <- df.b[complete.cases(df.b),]
# Separate outcome and training data
y <- df.b$correct_response
train <- df.b[,-1]
# Gen. test data where those treated become untreated, for use in calculating ITT
test <- train
test$treat.het <- ifelse(test$treat.het == 1,0,ifelse(test$treat.het == 0,1,NA))
# Run BART for predicted values of observed and synthetic observations
bart.out <- bart(x.train = train, y.train = y, x.test = test)
# Recover CATE estimates and format into dataframe
# Logic: Take predictions for those actually treated and minus counterfactual
#        Then take counterfactually treated and deduct prediction for those actually in control
CATE <- c(bart.out$yhat.train.mean[train$treat.het == 1] - bart.out$yhat.test.mean[test$treat.het == 0],
bart.out$yhat.test.mean[test$treat.het == 1] - bart.out$yhat.train.mean[train$treat.het == 0])
CATE_df <- data.frame(CATE = CATE)
covars <- rbind(train[train$treat.het == 1,2], test[test$treat.het==1,2])
CATE_df <- cbind(CATE_df,covars)
CATE_df <- CATE_df[order(CATE_df$CATE),]
CATE_df$id <- c(1:length(CATE))
# Descriptive results reported in main text:
mean(CATE_df$CATE)
summary(CATE_df$CATE)
# Proportion of CATEs that are negative:
sum(CATE_df$CATE < 0)/nrow(CATE_df)
sum(CATE_df$CATE < mean(CATE_df$CATE))/nrow(CATE_df)
# Private participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$private == 1 )/sum(CATE_df$private == 1)
# Public participant: prop. below mean
sum(CATE_df$CATE < mean(CATE_df$CATE) & CATE_df$private == 0 )/sum(CATE_df$private == 0)
# CATE Heterogeneity plot
hist <- CATE_df
hist$p<-NA
hist$p<-ifelse(hist$private==1, "Private Pensions", "Public Benefits")
hist$p<- factor(hist$p, levels=c('Public Benefits', 'Private Pensions'))
effectsPlot <- ggplot(hist, aes(x=id, y = CATE)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$CATE), color = "blue") +
labs(x="Individual",y = "CATE") +
theme_minimal() +
scale_x_continuous(limits = c(0,nrow(train)))
#ggsave(effectsPlot, filename= "test.pdf")
# Mode histogram
modePlot <- ggplot(hist, aes(x=id, fill=factor(p))) +
geom_histogram(binwidth = 60,position="stack") +
theme(legend.position="bottom") +
labs(y = "Count", x = "Individual")+
#scale_x_continuous(limits = c(0,nrow(train))) +
scale_fill_discrete(name = "", )
#scale_fill_manual(name="Mode", values=colours) +
modePlot
# Combine all plots into one chart
Priv_het <- ggarrange(effectsPlot, modePlot,
ncol = 1, nrow = 2, heights = c(2,2))
Priv_het
ggsave(Priv_het, filename = "Lab/Outputs/Figure_A2b.pdf", path=path_github, device = "pdf", height = 8, width = 6, dpi = 300)

## Load own functions
source(paste0(path_github,"Lab/R/funciones.R"))
## ETL
# import, transform and save data surveys
source(paste0(path_github,"Lab/R/etl_surveys.R"))
# import, transform and save site data
sitios <-
list.files(path = paste0(path_datos, "clicks"),
pattern = "Clicks",
full.names = T) %>%
map_df(~read_csv(., col_types = cols(.default = "c"))) %>%
unite("inicio_wix", c("inicio_wix.p1", "inicio_wix.p8"), na.rm = TRUE, remove = TRUE)
View(sitios)
# remove columns with complete NA
sitios <- sitios[,colSums(is.na(sitios))<nrow(sitios)]
# remove rows with complete NA
N = ncol(sitios) - 4 # check the number of columns that will always have data (4 in these case)
sitios <- delete.na(sitios, N)
# Transform and create variables
sitios2 <- sitios %>%
mutate(useridn = as.numeric(gsub("-", "" , substr(userid, 1,4))),
sitio= stringi::stri_sub(userid, -1),
fecha = lubridate::as_date(`Created date`, format = "%Y-%m-%d"),
created_date = lubridate::as_datetime(`Created date`, "%Y-%m-%dT%H:%M:%SZ"),
updated_date = lubridate::as_datetime(`Updated date`, "%Y-%m-%dT%H:%M:%SZ")) %>%
mutate(
tiempo_sec_1click_nclick = as.numeric(difftime(updated_date, created_date, units="secs")),
tiempo_min_1click_nclick = as.numeric(difftime(updated_date, created_date, units="secs"))/60)  %>%
filter(useridn != 0) %>%
group_by(useridn) %>%
filter(tiempo_sec_1click_nclick==max(tiempo_sec_1click_nclick)) %>%
ungroup() %>%
mutate(na_count = apply(., 1, function(x) sum(is.na(x)))) %>%
mutate(n_clicks = dim(.)[2]-na_count-11)
# intermediate data for answer variable
contestar <- sitios2 %>%
select(useridn, fecha, matches("^(n|y)_contestar"))  %>%
pivot_longer(cols=c(y_contestar.p1, y_contestar.p2, y_contestar.p3, y_contestar.p4, y_contestar.p5, y_contestar.p6, y_contestar.p7, y_contestar.p8), values_to = "y_contestar") %>% select(-name) %>% distinct() %>%
pivot_longer(cols=c(n_contestar.p1, n_contestar.p2, n_contestar.p3, n_contestar.p4, n_contestar.p7, n_contestar.p8), values_to = "n_contestar") %>%
select(-name) %>%
distinct()
contestar <- delete.na(contestar, 1)
contestar <- contestar %>%  #dplyr::select(useridn, fecha, y_contestar, n_contestar) %>%
mutate(contesta = case_when(
is.na(y_contestar)  ~ "C",
is.na(n_contestar)  ~ "B",
TRUE ~ "B/C"
),
terminaron = "si") %>%
group_by(useridn)
sitios_complete <- contestar %>%
full_join(sitios2, by="useridn") %>%
mutate(terminaron = ifelse(is.na(terminaron), "no", terminaron))# %>%
# select(!matches("^(n|y)_contestar"))
saveRDS(sitios_complete, paste0(path_datos,"sitios_complete.rds"))
# Pivot sites for page behavior analysis
sitios_pivot <- sitios2 %>%
dplyr::select(-`Created date`, -`Updated date`) %>%
pivot_longer(cols = !c(userid, useridn, fecha, sitio, created_date, updated_date,
tiempo_sec_1click_nclick, tiempo_min_1click_nclick,
na_count, n_clicks, inicio_wix, ),
names_to = "botones",
values_to = "time"
) %>%
na.omit() %>%
mutate(page = str_split(botones, "_", simplify = TRUE)) %>%
mutate(site = str_split(page[,2], ".p", simplify = TRUE)) %>%
mutate(pagina = case_when(
site[,1] == "inicio" ~ "inicio",
site[,1] == "contestar" ~ "contestar",
site[,1] == "cm" ~ "comparar",
site[,1] == "ps" ~ "pasos",
site[,1] == "pgucona" & sitio
== 1 ~ "perfil",
site[,1] == "pguscona" & sitio == 1 ~ "perfil",
site[,1] == "pgucona" & sitio == 3 ~ "perfil",
site[,1] == "pgucona" & sitio == 8 ~ "producto",
site[,1] == "pgucona" & sitio == 2 ~ "producto",
site[,1] == "clickaqui" ~ "clickaqui",
site[,1] == "pgusina" & sitio == 1 ~ "perfil",
site[,1] == "pgusina" & sitio == 3 ~ "perfil",
site[,1] == "pgusina" & sitio == 8 ~ "producto",
site[,1] == "pgusina" & sitio == 2 ~ "producto",
site[,1] == "instrucciones" ~ "instrucciones",
site[,1] == "invsina" & sitio == 1 ~ "perfil",
site[,1] == "invsina" & sitio == 3 ~ "perfil",
site[,1] == "invsina" & sitio == 8 ~ "producto",
site[,1] == "invsina" & sitio == 2 ~ "producto",
site[,1] == "rsh" ~ "rsh",
site[,1] == "heahorrado" ~ "perfil",
site[,1] == "saludable" ~ "perfil",
site[,1] == "gf" ~ "gf",
site[,1] == "difmodmix" ~ "difmodmix",
site[,1] == "ctie" ~ "ctie",
site[,1] == "rv" ~ "rv",
site[,1] == "pg" ~ "pg",
site[,1] == "masinfo" ~ "masinfo",
site[,1] == "novoyavivir" ~ "perfil",
site[,1] == "pg" ~ "pg",
site[,1] == "modmixtas" & sitio == 7 ~ "producto",
site[,1] == "ci" ~ "c_invalidez",
site[,1] == "cu" ~ "cu",
site[,1] == "" & sitio == 7 ~ "producto"
)) %>%
separate(time, c("first_time", "second_time"), " ; ") %>%
pivot_longer(cols = !c(userid, useridn, fecha, sitio, created_date, updated_date,
tiempo_sec_1click_nclick, tiempo_min_1click_nclick,
na_count, n_clicks, inicio_wix,
botones, page, site, pagina),
names_to = "veces",
values_to = "boton_time"
) %>%
na.omit() %>%
mutate(
boton = page[,1],
boton_time = lubridate::parse_date_time(as.character(boton_time), "%Y-%m-%d %H:%M:%S")
) %>%
group_by(useridn) %>%
arrange(useridn,boton_time ) %>%
mutate(first_click_diff = boton_time - lag(boton_time),
video = case_when(
boton == "cmvideoplay" ~ "video_play",
boton == "cmvideopausa" ~ "video_pausa",
boton == "psvideoplay" ~ "video_play",
boton == "psvideopausa" ~ "video_pausa",
boton == "videoplay" ~ "video_play",
boton == "videopausa" ~ "video_pausa",
TRUE ~ "non_video"
),
date_play = lubridate::parse_date_time(as.character((ifelse(video == "video_play", as.character(boton_time), NA))), "%Y-%m-%d %H:%M:%S"),
date_pause = lubridate::parse_date_time(as.character((ifelse(video == "video_pausa", as.character(boton_time), NA))), "%Y-%m-%d %H:%M:%S"),
video_pausa = ifelse(video == "video_pausa", "si", "no"),
tiempo_video = ifelse(lag(video)=="video_play", first_click_diff, NA))
#names(sitios_pivot)[17] <- "pagina"
# Pivot sites data
sitios_sm <- sitios_pivot %>%
group_by(useridn, sitio, pagina) %>%
dplyr::summarise(
tiempo_pag = sum(first_click_diff, na.rm = TRUE),
boton_time = boton_time,
video = video,
tiempo_video = tiempo_video,  na.rm = TRUE) %>%
mutate(t_perfil = ifelse(sitio %in% c(1,3,4,6), "perfil", "producto"),
t_video = ifelse(sitio %in% c(2,3,5,6), "video", "texto"),
tratamientos = paste0(t_perfil, "-", t_video),
Treatments = factor(case_when(
sitio == 1 ~ "Perfil",
sitio == 2 ~ "Video",
sitio ==  3 ~ "VideoPerfil",
sitio == 4 ~ "Perfil",
sitio == 5 ~ "Video",
sitio == 6 ~ "VideoPerfil",
sitio == 7 ~ "Baseline",
sitio == 8 ~ "Baseline"), levels = c("Baseline", "Perfil", "Video", "VideoPerfil")),
tiempo_sin_video = ifelse(is.na(tiempo_video),tiempo_pag, tiempo_pag - tiempo_video),
tiempo_con_video = as.numeric(tiempo_pag),
vieron_video = as.factor(ifelse(is.na(tiempo_video), "no", "si")),
tiempo_video =  ifelse(is.na(tiempo_video),0, tiempo_video)
) %>%
mutate(pagina2 = factor(case_when(
pagina == "perfil" ~ "Pension Type",
pagina == "producto" ~ "Pension Type",
pagina == "inicio" ~ "Start",
pagina == "clickaqui" ~ "Click Here",
pagina == "comparar" ~ "Compare",
pagina == "pasos" ~ "Steps",
pagina == "masinfo" | pagina == "difmodmix" | pagina == "gf" | pagina == "rsh" | pagina == "rv" | pagina == "pg" | pagina == "cu" | pagina == "c_invalidez" | pagina == "ctie" ~ "More Info",
pagina == "instrucciones" ~ "Instructions",
pagina == "contestar" ~ "Answer",
TRUE ~ "More Info"
), levels = c("Start", "Click Here", "Pension Type", "Compare",  "Steps",  "Instructions",  "Answer", "More Info" )),
pagina = factor(pagina, levels = c("inicio", "clickaqui", "comparar","pasos", "perfil", "producto", "masinfo", "instrucciones", "contestar", "difmodmix", "gf", "rsh", "rv", "pg", "cu", "c_invalidez", "ctie"))
)
saveRDS(sitios_sm, paste0(path_datos, "sitios_sm.rds"))
rm(list=ls())
## Set directory
# change your path
#path_datos <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Laboratorio/Encuestas y sitios/"
# If you don´t use Rprojects functionality setwd
#setwd("C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/")
#path_github <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/Pilots/Superintendencia_de_Pensiones"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
# create folders if doesn´t exists
ifelse(!dir.exists(file.path(path_github, "R")),
dir.create(file.path(path_github, "R")), FALSE)
ifelse(!dir.exists(file.path(path_github, "data")),
dir.create(file.path(path_github, "data")), FALSE)
ifelse(!dir.exists(file.path(path_github, "figures")),
dir.create(file.path(path_github, "figures")), FALSE)
## Load packages
source(paste0(path_github,"Lab/R/paquetes.R"))
## Load own functions
source(paste0(path_github,"Lab/R/funciones.R"))
## ETL
# import, transform and save data surveys
source(paste0(path_github,"Lab/R/etl_surveys.R"))
# import, transform and save site data
source(paste0(path_github,"Lab/R/etl_sites.R"))
# complete join (surveys + sites)
source(paste0(path_github,"Lab/R/etl_complete.R"))
## Load packages
source(paste0(path_github,"Lab/R/paquetes.R"))
## Load own functions
source(paste0(path_github,"Lab/R/funciones.R"))
## ETL
# import, transform and save data surveys
source(paste0(path_github,"Lab/R/etl_surveys.R"))
# import, transform and save site data
source(paste0(path_github,"Lab/R/etl_sites.R"))
# complete join (surveys + sites)
## Set directory
# change your path
#path_datos <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Laboratorio/Encuestas y sitios/"
# If you don´t use Rprojects functionality setwd
#setwd("C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/")
#path_github <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/Pilots/Superintendencia_de_Pensiones"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
## Load packages
source(paste0(path_github,"Lab/R/paquetes.R"))
## Load own functions
source(paste0(path_github,"Lab/R/funciones.R"))
## ETL
# import, transform and save data surveys
source(paste0(path_github,"Lab/R/etl_surveys.R"))
# import, transform and save site data
sitios_sm <- readRDS("C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Laboratorio/Encuestas y sitios/sitios_sm.rds")
View(sitios_sm)
data <- sitios_complete
dir.create(file.path(path_github, "figures")), FALSE)
source(paste0(path_github,"Lab/R/paquetes.R"))
## Load own functions
source(paste0(path_github,"Lab/R/funciones.R"))
## ETL
# import, transform and save data surveys
source(paste0(path_github,"Lab/R/etl_surveys.R"))
# import, transform and save site data
source(paste0(path_github,"Lab/R/etl_sites.R"))
# complete join (surveys + sites)
data <- sitios_complete %>%
right_join(encuestas, by = "useridn") %>%
filter(useridn >99) %>%
mutate(Age = 2022 - as.numeric(Birth),
Treatments = factor(case_when(
website == "1" ~ "Perfil",
website == "2" ~ "Video",
website ==  "3" ~ "VideoPerfil",
website == "4" ~ "Perfil",
website == "5" ~ "Video",
website == "6" ~ "VideoPerfil",
website == "7" ~ "Baseline",
website == "8" ~ "Baseline"), levels = c("Baseline", "Perfil", "Video", "VideoPerfil")),
Pension_Type = factor(case_when(
website == "1" ~ "Public",
website == "2" ~ "Public",
website == "3" ~ "Public",
website == "8" ~ "Public",
website == "4" ~ "Private",
website == "5" ~ "Private",
website == "6" ~ "Private",
website == "7" ~ "Private"), levels = c("Public", "Private"))) %>%
#online = ifelse(fecha.x.x == "2022-06-08", 1, 0))
arrange(useridn)
data$OptOut = ifelse(data$terminaron == "si" & data$contesta == "B" , "In", "Out")
#breaks <- hour(hm("00:00", "6:00", "12:00", "18:00", "23:59"))
# labels for the breaks
#labels <- c("Night", "Morning", "Afternoon", "Evening")
#data$Time_of_day <- cut(x=hour(data$StartDate), breaks = breaks, labels = labels, include.lowest=TRUE)
#Overconfidence
data$Confidence<-as.numeric(data$Confidence_1)
data$overconfidence<- data$Confidence/10 - data$correct_response/7
#Change opinion about advisor
data$Change_Advisor<-ifelse(data$PAdvice=="No" & data$Advisor=="No", "Maintain No",
ifelse (data$PAdvice=="No" & data$Advisor=="Sí", "> advisor",
ifelse(data$PAdvice=="Sí" & data$Advisor=="Sí", "Maintain Yes",
ifelse(data$PAdvice=="Sí" & data$Advisor=="No", "< advisor",
ifelse (data$PAdvice=="Sí" & data$Advisor=="Sí", "Maintain",
ifelse(data$PAdvice=="No lo ha pensado" & data$Advisor=="Sí", "> advisor",
ifelse(data$PAdvice=="No lo ha pensado" & data$Advisor=="No", "< advisor", "Error"
)))))))
### Correct answers for Financial Literacy Questions
#table(data$QMath1)
data$QMath1_correct<-ifelse(data$QMath1=="Más de $125.000.000", 1,
ifelse(is.na(data$QMath1), NA, 0))
#table(data$QMath1, data$QMath1_correct)
#table(data$QMath2)
data$QMath2_correct<-ifelse(data$QMath2=="Nunca se terminaría de pagar el crédito", 1,
ifelse(is.na(data$QMath1), NA, 0))
#table(data$QMath2, data$QMath2_correct)
#data$Qmath3num<-parse_number(data$Qmath3)
data$QMath3_correct<-ifelse(data$QMath3 == 5000,1,
ifelse(data$QMath3==5, 1,
ifelse(is.na(data$QMath1), NA, 0)))
#table(data$QMath3, data$QMath3_correct)
tmp<-data[, c("QMath1_correct", "QMath2_correct", "QMath3_correct") ]
#tmp[is.na(tmp)] <- 0
tmp$financial_lit<-rowSums(tmp)
data$financial_lit<-tmp$financial_lit
rm(tmp)
# Time preferences
df1<-grep("Q1", names(data), value=TRUE)
df2<-grep("Q2", names(data), value=TRUE)
df<-as.factor(c(df1, df2))
tmp<-data[, C(df)]
tmp$timevalue<-NA
for (i in 1:nrow(tmp)){
NonNAindex <- which(!is.na(tmp[i,]))
last <- max(NonNAindex)
tmp$timevalue[i]<-colnames(tmp)[last]
}
tmp$pb<-as.numeric(gsub('\\D+','',tmp$timevalue))
data$present_bias<-tmp$pb
data$pb_d<-ifelse(data$present_bias>19999, "alto", "bajo")
rm(df1, df2, df, tmp)
saveRDS(data, paste0(path_datos, "lab_data.rds"))
save(data, file=paste0(path_datos, "lab_data.Rdata"))
rm(list=ls())
#path_datos <- "C:/Users/Usuario/Documents/INVESTIGACION/MiInvestigacion/Pensions-Website-Design/"
#path_datos <- "C:/Users/Usach/Dropbox/Sitios web/Datos Estudio Online/"
#path_datos <- "C:/Users/Profesor/Dropbox/Sitios web/Datos Estudio Online/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Estudio Online/"
# If you don´t use Rprojects functionality setwd
#path_github <- "C:/Users/Usach/OneDrive - usach.cl/Documents/GitHub/Pensions-Website-Design/"
#path_github <- "C:/Users/Profesor/Documents/GitHub/Pensions-Website-Design/"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
#sitios_sm <- readRDS(paste0(path_datos, "sitios_complete.rds"))
df <- readRDS(paste0(path_datos, "lab_data.rds"))
df <- readRDS(paste0(path_datos, "Lab_data.rds"))
rm(list=ls())
#path_datos <- "C:/Users/Usach/Dropbox/Sitios web/Datos Estudio Online/"
#path_datos <- "C:/Users/Profesor/Dropbox/Sitios web/Datos Estudio Online/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Laboratorio/Encuestas y sitios/"
# If you don´t use Rprojects functionality setwd
#path_github <- "C:/Users/Usach/OneDrive - usach.cl/Documents/GitHub/Pensions-Website-Design/"
#path_github <- "C:/Users/Profesor/Documents/GitHub/Pensions-Website-Design/"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
################################
library(stargazer)
library(MASS)
library(broom)
library(ggpubr)
#library(naniar)
rm(list=ls())
#path_datos <- "C:/Users/Usach/Dropbox/Sitios web/Datos Estudio Online/"
#path_datos <- "C:/Users/Profesor/Dropbox/Sitios web/Datos Estudio Online/"
path_datos <- "C:/Users/Denise Laroze/Dropbox/Sitios web/Datos Laboratorio/Encuestas y sitios/"
# If you don´t use Rprojects functionality setwd
#path_github <- "C:/Users/Usach/OneDrive - usach.cl/Documents/GitHub/Pensions-Website-Design/"
#path_github <- "C:/Users/Profesor/Documents/GitHub/Pensions-Website-Design/"
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/"
#sitios_sm <- readRDS(paste0(path_datos, "sitios_complete.rds"))
source(paste0(path_github,"online/R/paquetes.R"))
source(paste0(path_github,"online/R/funciones.R"))
#source(paste0(path_github,"Online/R/etl_surveys.R"))
#source(paste0(path_github,"Online/R/etl_sites.R"))
#source(paste0(path_github,"Online/R/etl_complete.R"))
df <- readRDS(paste0(path_datos, "lab_data.rds"))
#Overconfidence
df$Confidence<-as.numeric(df$Confidence_1)
df$overconfidence<- (df$Confidence/10) / (df$correct_response/7)
#View(df[, c("correct_response", "Confidence", "overconfidence")])
#Change opinion about advisor
df$Change_Advisor<-ifelse(df$PAdvice=="No" & df$Advisor=="No", "Maintain No",
ifelse (df$PAdvice=="No" & df$Advisor=="Sí", "> advisor",
ifelse(df$PAdvice=="Sí" & df$Advisor=="Sí", "Maintain Yes",
ifelse(df$PAdvice=="Sí" & df$Advisor=="No", "< advisor",
ifelse(df$PAdvice=="No lo ha pensado" & df$Advisor=="Sí", "> advisor",
ifelse(df$PAdvice=="No lo ha pensado" & df$Advisor=="No", "< advisor", "Error"
))))))
df$pb_d<-ifelse(df$present_bias>19999, "alto", "bajo")
### Alternative Financial Literacy
### Correct answers for Finantial Literacy Questions
#table(DF$QMath1)
df$QMath1b_correct<-ifelse(df$QMath1=="Más de $125.000.000",  1,
ifelse(is.na(df$QMath1), NA, 0))
#table(DF$QMath1, DF$QMath1_correct)
#table(DF$QMath2)
df$QMath2b_correct<-ifelse(df$QMath2=="Nunca se terminaría de pagar el crédito", 1,
ifelse(is.na(df$QMath1), NA, 0))
#table(DF$QMath2, DF$QMath2_correct)
tmp<-df[, c("QMath1b_correct", "QMath2b_correct") ]
tmp$financial_lit_b<-rowSums(tmp)
df$financial_lit_b<-tmp$financial_lit_b
rm(tmp)
df.f<-df[!is.na(df$correct_response),]
df.pv<-df[df$Pension_Type=="Private",]
df.pp<-df[df$Pension_Type=="Public",]
df.ns<-df[df$PlanJubi=="No sabe",]
183-168
View(df[ !is.na(df$correct_response),])
names(df)
View(df[ !is.na(df$correct_response), c( "genero", "Confused" , "total_reward"  )])
View(df[ !is.na(df$correct_response), c( "Treatments", "Optout" , "total_reward"  )])
View(df[ !is.na(df$correct_response), c( "Treatments", "Optout" , "total_reward"  )])
View(df[ !is.na(df$correct_response), c( "Treatments", "OptOut" , "total_reward"  )])
View(df[ is.na(df$correct_response), c( "Treatments", "OptOut" , "total_reward"  )])
View(df[, c( "Treatments", "OptOut" , "total_reward"  )])
tmp<-df
table(df$terminaron)
table(df$contesta)
table(df$contesta)
summary(df$contesta)
View(df[, c( "Treatments", "OptOut" , "total_reward" , "contesta" )])
df.pv<-df[df$Pension_Type=="Private",]
df.pp<-df[df$Pension_Type=="Public",]
df.ns<-df[df$PlanJubi=="No sabe",]
prop.table(table(encuestas$obliga))
### Correct responses
prop.table(table(df.f$obliga))
prop.table(table(df.f$obliga))
prop.table(table(df.f$inicio))
prop.table(table(df.f$elegir))
prop.table(table(df.f$sirve.scmp))
prop.table(table(df.f$scmp.twice))
prop.table(table(df.f$asesor))
prop.table(table(df.f$propiedad))
prop.table(table(df.f$ncomp1))
prop.table(table(df.f$ncomp2))
prop.table(table(df.f$ncomp3))
prop.table(table(df.f$ncomp4))
prop.table(table(df.f$ncomp5))
prop.table(table(df.f$ncomp6))
prop.table(table(df.f$ncomp7))
prop.table(table(df.f$financial_lit_b))
prop.table(table(df.f$HSist))
prop.table(table(df.f$genero))
prop.table(table(df.f$Educ))
summary(2022-as.numeric(df.f$Birth))
table(df.f$Pension_Type)
require(nnet)
multinom_model1 <- multinom(Treatments ~ Age + Gender + Educ, data = df)
multinom_model2 <- multinom(Treatments ~ Age + Gender + Educ + pb_d + as.factor(financial_lit_b), data = df)
stargazer(multinom_model1, multinom_model2)
require(nnet)
multinom_model1 <- multinom(Treatments ~ Age + Gender , data = df)
multinom_model2 <- multinom(Treatments ~ Age + Gender + pb_d + as.factor(financial_lit_b), data = df)
stargazer(multinom_model1, multinom_model2)
### Correct Response
lm_CR <- lm(correct_response ~ Treatments + as.factor(financial_lit_b) ,
data = df)
lm_CR_pv <- lm(correct_response ~ Treatments + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Public",])
lm_CR_pp <- lm(correct_response ~ Treatments + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Private",])
lm_CR_F <- lm(correct_response ~ Treatments + as.factor(financial_lit_b),
data = df[df$Gender=="F",])
lm_CR_M <- lm(correct_response ~ Treatments + as.factor(financial_lit_b),
data = df[df$Gender=="M",])
summary(lm_CR_pv)
stargazer(lm_CR, lm_CR_pv, lm_CR_pp, lm_CR_F, lm_CR_M)
lm_CR <- lm(correct_response ~ Treatments+ Age + Gender  + pb_d + as.factor(financial_lit_b),
data = df)
lm_CR_pp <- lm(correct_response ~ Treatments + Age + Gender + pb_d + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Public",])
lm_CR_pv <- lm(correct_response ~ Treatments + Age + Gender + pb_d + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Private",])
lm_CR_F <- lm(correct_response ~ Treatments + Age  + pb_d + as.factor(financial_lit_b),
data = df[df$Gender=="F",])
lm_CR_M <- lm(correct_response ~ Treatments + Age  + pb_d + as.factor(financial_lit_b),
data = df[df$Gender=="M",])
lm_CR_ns <- lm(correct_response ~ Treatments + Age + Gender + pb_d ,
data = df.ns)
stargazer(lm_CR, lm_CR_pp, lm_CR_pv, lm_CR_F, lm_CR_M, lm_CR_ns)
lm_CR_ns <- lm(correct_response ~ Treatments + Age + Gender + pb_d ,
data = df.ns)
summary(lm_CR_ns)
lm_CR <- lm(correct_response ~ Treatments+ Age + Gender  + pb_d + as.factor(financial_lit_b),
data = df.f)
lm_CR_ns <- lm(correct_response ~ Treatments+ Age + Gender  + pb_d + as.factor(financial_lit_b) ,
data = df.ns)
stargazer(lm_CR, lm_CR_pp, lm_CR_pv, lm_CR_F, lm_CR_M, lm_CR_ns)
View(lm_CR_ns[, c( "Treatments", "Age" , "Gender" , "pb_d", "financial_lit_b" )])
View(lm_CR_ns[, c( "Treatments", "Age" , "financial_lit_b" )])
View(df.ns[, c( "Treatments", "Age" , "Gender" , "pb_d", "financial_lit_b" )])
View(df.ns[, c( "Treatments", "PlanJubi", "Age" , "Gender" , "pb_d", "financial_lit_b" )])
View(df.f[, c( "Treatments", "PlanJubi", "Age" , "Gender" , "pb_d", "financial_lit_b" )])
advisor<- glm(as.factor(Advisor) ~ Treatments, data = df, family = "binomial")
stargazer(advisor) ### Puede dar el video, pero se necesitan más datos para tener más seguridad
df$facil<-parse_number(df$Facilidad)
lm_facil <- lm(facil ~ Treatments,
data = df[df$Pension_Type=="Public",])
stargazer(lm_facil)
df$InfoUtil_1<-as.numeric(df$InfoUtil_1)
lm_util <- lm(InfoUtil_1 ~ Treatments,
data = df)
lm_util.pp <- lm(InfoUtil_1 ~ Treatments,
data = df[df$Pension_Type=="Public",])
lm_util.pv <- lm(InfoUtil_1 ~ Treatments,
data = df[df$Pension_Type=="Private",])
stargazer(lm_util, lm_util.pp, lm_util.pv)
advisor<- glm(as.factor(Advisor) ~ Treatments, data = df, family = "binomial")
stargazer(advisor) ### Puede dar el video, pero se necesitan más datos para tener más seguridad
Chang_Adv <- glm(as.factor(Change_Advisor) ~ Treatments, data = df, family = "binomial")
summary(Chang_Adv)
df$Recomendar<-as.numeric(df$Recomendar)
lm_recomendar<- lm(Recomendar ~ Treatments,
data = df)
lm_recomendar.pv <- lm(Recomendar ~ Treatments,
data = df[df$Pension_Type=="Private",])
lm_recomendar.pp <- lm(Recomendar ~ Treatments,
data = df[df$Pension_Type=="Public",])
stargazer(lm_recomendar, lm_recomendar.pp, lm_recomendar.pv)
mean(df$Recomendar, na.rm = T)
mean(df$Confidence, na.rm=T)
lm_overconf<-lm(overconfidence~ Treatments,
data = df)
lm_overconf.pp<-lm(overconfidence~ Treatments,
data = df[df$Pension_Type=="Public",])
lm_overconf.pv<-lm(overconfidence~ Treatments,
data = df[df$Pension_Type=="Private",])
stargazer(lm_overconf, lm_overconf.pp, lm_overconf.pv)
